/* CSS Variables for techy/math theming - Override any purple colors */
:root {
  /* Vibrant Green Tech Color Palette */
  --matrix-green: #00ff41;
  --matrix-green-dark: #00cc33;
  --cyber-blue: #00d4ff;
  --cyber-blue-dark: #0099cc;
  --bright-green: #39ff14;
  --neon-green: #7fff00;
  --lime-green: #32cd32;
  --electric-cyan: #00ffff;
  --terminal-green: #0dff0d;
  
  /* Override any purple colors from other stylesheets */
  --primary-500: #00ff41 !important;
  --primary-600: #00cc33 !important;
  --primary-700: #00aa2b !important;
  --accent-pink: #00ff41 !important;
  --purple: #00ff41 !important;
  --violet: #00d4ff !important;
  
  /* Vibrant Green Tech gradients */
  --primary-gradient: linear-gradient(135deg, #00ff41 0%, #39ff14 50%, #7fff00 100%);
  --secondary-gradient: linear-gradient(135deg, #0099cc 0%, #00ff41 100%);
  --accent-gradient: linear-gradient(135deg, #32cd32 0%, #00d4ff 100%);
  --success-gradient: linear-gradient(135deg, #39ff14 0%, #00ff41 100%);
  --warning-gradient: linear-gradient(135deg, #7fff00 0%, #32cd32 100%);
  --code-gradient: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
  --vibrant-gradient: linear-gradient(135deg, #39ff14 0%, #00ff41 30%, #00d4ff 70%, #00ffff 100%);
  
  /* Dark tech backgrounds */
  --dark-bg: #0a0a0f;
  --darker-bg: #050508;
  --card-bg: rgba(0, 255, 65, 0.03);
  --terminal-bg: rgba(0, 0, 0, 0.8);
  --bg-primary: #000000;
  --bg-secondary: #0a0a0a;
  --bg-tertiary: #001a00;
  --bg-card: rgba(0, 26, 0, 0.9);
  --bg-glass: rgba(0, 20, 0, 0.8);
  --bg-hover: rgba(0, 51, 0, 0.6);
  
  /* Text colors */
  --text-primary: #00ff41;
  --text-secondary: #00d4ff;
  --text-muted: rgba(0, 255, 65, 0.6);
  --text-code: #39ff14;
  --text-accent: #7fff00;
  --text-highlight: #00d4ff;
  --text-bright: #0dff0d;
  
  /* Borders and effects */
  --border-color: rgba(0, 255, 65, 0.2);
  --border-glow: rgba(0, 212, 255, 0.3);
  --shadow-light: 0 8px 32px rgba(0, 255, 65, 0.15);
  --shadow-heavy: 0 15px 35px rgba(0, 212, 255, 0.25);
  --blur-bg: rgba(0, 255, 65, 0.05);
  --glow-effect: 0 0 20px rgba(0, 255, 65, 0.5);
  --border-primary: rgba(0, 255, 65, 0.5);
  --border-secondary: rgba(57, 255, 20, 0.4);
  --border-accent: rgba(127, 255, 0, 0.4);
  --border-cyber: rgba(0, 212, 255, 0.3);
  --glow-primary: 0 0 25px rgba(0, 255, 65, 0.4);
  --glow-secondary: 0 0 20px rgba(57, 255, 20, 0.4);
  --glow-accent: 0 0 15px rgba(127, 255, 0, 0.3);
  --glow-cyber: 0 0 18px rgba(0, 212, 255, 0.3);
}

/* Custom Scrollbar Styling - Matrix/Tech Theme */
::-webkit-scrollbar {
  width: 12px;
  background: var(--bg-primary);
}

::-webkit-scrollbar-track {
  background: linear-gradient(180deg, var(--bg-secondary) 0%, var(--bg-tertiary) 50%, var(--bg-secondary) 100%);
  border-radius: 6px;
  border: 1px solid rgba(0, 255, 65, 0.1);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, var(--matrix-green) 0%, var(--bright-green) 50%, var(--neon-green) 100%);
  border-radius: 6px;
  border: 1px solid var(--matrix-green);
  box-shadow: var(--glow-primary), inset 0 0 10px rgba(0, 255, 65, 0.2);
  transition: all 0.3s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(180deg, var(--bright-green) 0%, var(--neon-green) 50%, var(--matrix-green) 100%);
  box-shadow: var(--glow-secondary), var(--glow-primary), inset 0 0 15px rgba(57, 255, 20, 0.3);
  transform: scale(1.1);
}

::-webkit-scrollbar-thumb:active {
  background: linear-gradient(180deg, var(--neon-green) 0%, var(--bright-green) 100%);
  box-shadow: var(--glow-accent), var(--glow-secondary), inset 0 0 20px rgba(127, 255, 0, 0.4);
}

::-webkit-scrollbar-corner {
  background: var(--bg-primary);
}

/* Firefox Scrollbar Styling */
html {
  scrollbar-width: thin;
  scrollbar-color: var(--matrix-green) var(--bg-secondary);
}

/* Global Styles - Override any purple backgrounds */
body.landing-page-body,
body {
  margin: 0 !important;
  padding: 0 !important;
  font-family: 'JetBrains Mono', 'Fira Code', 'Consolas', monospace !important;
  background: var(--dark-bg) !important;
  background-image: 
    /* Matrix-like grid pattern */
    linear-gradient(rgba(0, 255, 65, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 65, 0.03) 1px, transparent 1px),
    /* Tech glow effects - NO PURPLE */
    radial-gradient(circle at 20% 80%, rgba(0, 255, 65, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(0, 212, 255, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(0, 255, 65, 0.08) 0%, transparent 50%),
    /* Binary code pattern */
    radial-gradient(circle at 60% 60%, rgba(57, 255, 20, 0.05) 0%, transparent 70%) !important;
  background-size: 50px 50px, 50px 50px, 800px 800px, 600px 600px, 400px 400px, 300px 300px !important;
  min-height: 100vh !important;
  overflow-x: hidden !important;
  position: relative !important;
}

/* Add floating mathematical symbols */
body::before {
  content: '∑ ∫ π ∞ √ ∆ ∇ ∂ ≈ ≠ ≤ ≥ ∈ ∉ ∪ ∩ ⊂ ⊃ ∀ ∃ ∴ ∵ ∧ ∨ ¬ ⊕ ⊗';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  font-size: 2rem;
  color: rgba(0, 255, 65, 0.05);
  pointer-events: none;
  z-index: -2;
  animation: floatMathSymbols 20s linear infinite;
  white-space: pre-wrap;
  word-spacing: 100px;
  line-height: 200px;
  overflow: hidden;
}

@keyframes floatMathSymbols {
  0% { transform: translateY(100vh) rotate(0deg); }
  100% { transform: translateY(-100vh) rotate(360deg); }
}

/* Landing Container - Highest specificity to override ALL global styles including App.css */
.landing-container,
body .landing-container,
.app-container .landing-container,
html body .app-container .landing-container {
  min-height: 100vh !important;
  width: 100% !important;
  position: relative !important;
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: flex-start !important;
  padding: 2rem !important;
  background: var(--dark-bg) !important;
  background-color: var(--dark-bg) !important;
  background-image: 
    /* Matrix-like grid pattern - NO PURPLE */
    linear-gradient(rgba(0, 255, 65, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 65, 0.03) 1px, transparent 1px),
    /* Tech glow effects - ONLY GREEN AND BLUE */
    radial-gradient(circle at 20% 80%, rgba(0, 255, 65, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(0, 212, 255, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(0, 255, 65, 0.08) 0%, transparent 50%),
    /* Binary code pattern */
    radial-gradient(circle at 60% 60%, rgba(57, 255, 20, 0.05) 0%, transparent 70%) !important;
  background-size: 50px 50px, 50px 50px, 800px 800px, 600px 600px, 400px 400px, 300px 300px !important;
  background-attachment: fixed !important;
  overflow-x: hidden !important;
  max-width: min(1400px, 100vw) !important;
  margin: 0 auto !important;
  box-sizing: border-box !important;
}

/* Interactive Background */
.interactive-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.bg-particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: var(--matrix-green);
  border-radius: 0;
  animation: digitalRain 8s linear infinite;
  font-family: 'JetBrains Mono', monospace;
  font-size: 12px;
  color: var(--terminal-green);
}

.bg-particle::before {
  content: attr(data-binary);
  position: absolute;
  top: -6px;
  left: -3px;
  font-size: 8px;
  opacity: 0.7;
}

.bg-particle:nth-child(odd) {
  animation-delay: -2s;
  background: var(--cyber-blue);
}

.bg-particle:nth-child(even) {
  animation-delay: -4s;
  background: var(--bright-green);
}

.bg-particle:nth-child(3n) {
  animation-delay: -6s;
  background: var(--terminal-green);
}

@keyframes digitalRain {
  0% {
    transform: translateY(-100vh) scale(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
    transform: scale(1);
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) scale(0);
    opacity: 0;
  }
}

.mouse-follower {
  position: fixed;
  width: 50px;
  height: 50px;
  background: radial-gradient(circle, rgba(0, 255, 65, 0.4) 0%, rgba(57, 255, 20, 0.3) 40%, rgba(127, 255, 0, 0.2) 80%, rgba(0, 212, 255, 0.1) 100%);
  border-radius: 50%;
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: screen;
  transition: transform 0.1s ease-out;
  box-shadow: var(--glow-primary), var(--glow-secondary), var(--glow-accent);
  transform: translate(-50%, -50%);
}

/* Hero Section */
.hero-section {
  text-align: center;
  padding: clamp(3rem, 8vw, 6rem) clamp(1rem, 4vw, 2rem) clamp(4rem, 10vw, 8rem);
  position: relative;
  z-index: 1;
  width: 100%;
  max-width: min(1200px, 95vw);
  margin: clamp(1rem, 3vw, 2rem) auto;
  background: linear-gradient(135deg, rgba(0, 255, 65, 0.02) 0%, rgba(0, 212, 255, 0.02) 100%);
  border-radius: clamp(12px, 3vw, 24px);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(0, 255, 65, 0.1);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.05);
  overflow: hidden;
}

.hero-badge {
  display: inline-block;
  padding: 0.5rem 1.5rem;
  background: var(--terminal-bg);
  backdrop-filter: blur(10px);
  border: 2px solid var(--border-color);
  border-radius: 8px;
  color: var(--text-secondary);
  font-size: 0.875rem;
  font-weight: 500;
  margin-bottom: 2rem;
  animation: fadeInUp 0.8s ease, terminalGlow 2s ease-in-out infinite alternate;
  font-family: 'JetBrains Mono', monospace;
  text-transform: uppercase;
  letter-spacing: 2px;
  position: relative;
  overflow: hidden;
}

.hero-badge::before {
  content: '> ';
  color: var(--matrix-green);
  animation: blink 1s infinite;
}

.hero-badge::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(0, 255, 65, 0.2), transparent);
  animation: scanLine 3s infinite;
}

@keyframes terminalGlow {
  0% { box-shadow: 0 0 5px var(--matrix-green); }
  100% { box-shadow: 0 0 20px var(--matrix-green), 0 0 30px var(--cyber-blue); }
}

@keyframes blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

@keyframes scanLine {
  0% { left: -100%; }
  100% { left: 100%; }
}

@keyframes typewriter {
  0% { width: 0; }
  50% { width: 100%; }
  100% { width: 100%; border-right-color: transparent; }
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes gradientShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

@keyframes colorShift {
  0%, 100% {
    filter: hue-rotate(0deg) brightness(1);
  }
  25% {
    filter: hue-rotate(90deg) brightness(1.1);
  }
  50% {
    filter: hue-rotate(180deg) brightness(0.9);
  }
  75% {
    filter: hue-rotate(270deg) brightness(1.1);
  }
}

@keyframes slideInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-50px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromRight {
  0% {
    opacity: 0;
    transform: translateX(50px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
.hero-title {
  font-size: clamp(2rem, 6vw, 4.5rem);
  font-weight: 800;
  color: var(--text-primary);
  margin: 0 0 2rem;
  line-height: 1.2;
  animation: fadeInUp 0.8s ease 0.2s both;
  font-family: 'JetBrains Mono', monospace;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
  max-width: 100%;
}

.gradient-text {
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: gradientShift 3s ease-in-out infinite, matrixGlow 2s ease-in-out infinite alternate;
}

@keyframes matrixGlow {
  0% { filter: drop-shadow(0 0 5px var(--matrix-green)); }
  100% { filter: drop-shadow(0 0 15px var(--cyber-blue)) drop-shadow(0 0 25px var(--bright-green)); }
}

.hero-subtitle {
  font-size: clamp(1rem, 3vw, 1.5rem);
  color: var(--text-secondary);
  margin: clamp(1rem, 3vw, 2rem) auto clamp(2rem, 5vw, 4rem);
  max-width: min(700px, 90vw);
  line-height: 1.6;
  animation: fadeInUp 0.8s ease 0.4s both;
  font-family: 'JetBrains Mono', monospace;
  position: relative;
  font-weight: 400;
  opacity: 0.9;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

.hero-subtitle::before {
  content: '/* ';
  color: var(--terminal-green);
  opacity: 0.7;
  font-weight: 600;
}

.hero-subtitle::after {
  content: ' */';
  color: var(--terminal-green);
  opacity: 0.7;
  font-weight: 600;
}

.hero-stats {
  display: flex;
  justify-content: center;
  gap: clamp(1rem, 4vw, 3rem);
  margin: clamp(2rem, 4vw, 3rem) 0;
  animation: fadeInUp 0.8s ease 0.6s both;
  flex-wrap: wrap;
}

.stat-item {
  text-align: center;
}

.stat-number {
  font-size: 2.5rem;
  font-weight: 700;
  background: var(--accent-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  display: block;
}

.stat-label {
  font-size: 0.875rem;
  color: var(--text-muted);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.hero-features {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
  gap: clamp(1rem, 3vw, 2rem);
  margin: clamp(2rem, 5vw, 4rem) 0;
  animation: fadeInUp 0.8s ease 0.8s both;
  width: 100%;
  max-width: 100%;
}

.feature-item {
  padding: 2rem;
  background: var(--terminal-bg);
  backdrop-filter: blur(10px);
  border: 2px solid var(--border-color);
  border-radius: 8px;
  text-align: center;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  font-family: 'JetBrains Mono', monospace;
}

.feature-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: var(--primary-gradient);
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.feature-item:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-heavy), var(--glow-effect);
  border-color: var(--bright-green);
  background: var(--bg-hover);
}

.feature-item:hover::before {
  transform: scaleX(1);
}

.feature-item:hover .feature-title {
  color: var(--matrix-green);
  text-shadow: 0 0 10px var(--matrix-green);
}

.feature-icon {
  width: 60px;
  height: 60px;
  margin: 0 auto 1rem;
  background: var(--primary-gradient);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.feature-icon svg {
  width: 30px;
  height: 30px;
  fill: white;
}

.feature-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 0.5rem;
}

.feature-description {
  color: var(--text-secondary);
  font-size: 0.875rem;
  line-height: 1.5;
}

.hero-cta {
  display: flex;
  gap: clamp(1rem, 3vw, 2rem);
  justify-content: center;
  flex-wrap: wrap;
  margin-top: clamp(2rem, 5vw, 4rem);
  animation: fadeInUp 0.8s ease 0.6s both;
  width: 100%;
  max-width: 100%;
}

.hero-cta .btn {
  padding: clamp(0.8rem, 2vw, 1.25rem) clamp(1.5rem, 4vw, 3rem);
  border-radius: clamp(8px, 2vw, 12px);
  font-weight: 700;
  text-decoration: none;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  border: none;
  font-family: 'JetBrains Mono', monospace;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(10px);
  font-size: clamp(0.8rem, 2vw, 1rem);
  min-width: fit-content;
  max-width: 100%;
  word-wrap: break-word;
}

.hero-cta .btn::before {
  content: '> ';
  opacity: 0;
  transform: translateX(-10px);
  transition: all 0.3s ease;
}

.hero-cta .btn:hover::before {
  opacity: 1;
  transform: translateX(0);
}

.hero-cta .btn-primary {
  background: var(--primary-gradient);
  color: white;
  box-shadow: var(--shadow-light), var(--glow-primary);
  border: 2px solid var(--matrix-green);
}

.hero-cta .btn-primary:hover {
  transform: translateY(-4px) scale(1.02);
  box-shadow: var(--shadow-heavy), var(--glow-secondary), 0 0 30px rgba(0, 255, 65, 0.4);
  background: linear-gradient(135deg, #39ff14 0%, #00ff41 50%, #0dff0d 100%);
}

.hero-cta .btn-secondary {
  background: rgba(0, 255, 65, 0.05);
  color: var(--text-primary);
  border: 2px solid var(--border-primary);
  backdrop-filter: blur(15px);
}

.hero-cta .btn-secondary:hover {
  background: rgba(0, 255, 65, 0.1);
  transform: translateY(-4px) scale(1.02);
  box-shadow: var(--shadow-light), var(--glow-accent);
  border-color: var(--bright-green);
  color: var(--bright-green);
}

/* Game Options Section */
.game-options {
  margin: 6rem 0;
}

.section-header {
  text-align: center;
  margin-bottom: 4rem;
  animation: fadeInUp 0.8s ease;
}

.section-title {
  font-size: clamp(2rem, 5vw, 3.5rem);
  font-weight: 800;
  color: var(--text-primary);
  margin: 0 0 clamp(1rem, 2vw, 1.5rem);
  background: var(--primary-gradient);
  background-size: 200% 200%;
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 0 20px var(--matrix-green);
  animation: gradientShift 4s ease-in-out infinite, matrixGlow 3s ease-in-out infinite alternate;
  font-family: 'JetBrains Mono', monospace;
  text-transform: uppercase;
  letter-spacing: 2px;
  position: relative;
}

.section-title::before {
  content: '[ ';
  color: var(--terminal-green);
  opacity: 0.8;
  animation: pulse 2s ease-in-out infinite;
}

.section-title::after {
  content: ' ]';
  color: var(--terminal-green);
  opacity: 0.8;
  animation: pulse 2s ease-in-out infinite 0.5s;
}

.section-subtitle {
  font-size: 1.4rem;
  color: var(--text-secondary);
  margin: 0 auto 2rem;
  max-width: 700px;
  opacity: 0.9;
  font-family: 'JetBrains Mono', monospace;
  line-height: 1.6;
  position: relative;
}

.section-subtitle::before {
  content: '// ';
  color: var(--terminal-green);
  opacity: 0.7;
}

.section-subtitle::after {
  content: ' //';
  color: var(--terminal-green);
  opacity: 0.7;
}

.game-cards-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(350px, 100%), 1fr));
  gap: clamp(1rem, 3vw, 2rem);
  margin-top: clamp(2rem, 4vw, 3rem);
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}

.game-card-wrapper {
  position: relative;
  animation: fadeInUp 0.8s ease;
}

.game-card {
  position: relative;
  padding: clamp(1.5rem, 4vw, 3rem);
  background: linear-gradient(135deg, rgba(0, 255, 65, 0.03) 0%, rgba(0, 212, 255, 0.02) 100%);
  border: 2px solid var(--border-primary);
  border-radius: clamp(16px, 3vw, 24px);
  text-decoration: none;
  color: inherit;
  display: block;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  backdrop-filter: blur(20px);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.05);
  overflow: hidden;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

.game-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: var(--primary-gradient);
  transition: left 0.5s ease;
}

.game-card:hover {
  transform: translateY(-12px) scale(1.02);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3), var(--glow-primary), inset 0 1px 0 rgba(255, 255, 255, 0.1);
  border-color: var(--matrix-green);
  background: linear-gradient(135deg, rgba(0, 255, 65, 0.05) 0%, rgba(0, 212, 255, 0.03) 100%);
}

.game-card:hover::before {
  left: 0;
}

.card-glow {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(102, 126, 234, 0.1) 0%, transparent 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.game-card:hover .card-glow {
  opacity: 1;
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1.5rem;
}

.card-badge {
  padding: 0.25rem 0.75rem;
  background: var(--accent-gradient);
  color: white;
  border-radius: 20px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.card-icon {
  width: 90px;
  height: 90px;
  background: var(--primary-gradient);
  border-radius: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2.2rem;
  margin-bottom: 2rem;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: var(--glow-primary), 0 8px 20px rgba(0, 0, 0, 0.2);
  border: 2px solid var(--matrix-green);
  position: relative;
  overflow: hidden;
}

.card-icon::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transform: rotate(45deg);
  transition: all 0.6s ease;
  opacity: 0;
}

.game-card:hover .card-icon {
  transform: scale(1.15) rotate(8deg);
  box-shadow: var(--glow-secondary), var(--glow-accent), 0 12px 30px rgba(0, 0, 0, 0.3);
}

.game-card:hover .card-icon::before {
  opacity: 1;
  transform: rotate(45deg) translate(50%, 50%);
}

.card-content h3 {
  font-size: 1.75rem;
  font-weight: 800;
  color: var(--text-primary);
  margin: 0 0 1rem;
  font-family: 'JetBrains Mono', monospace;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
}

.card-content h3::before {
  content: '{ ';
  color: var(--terminal-green);
  opacity: 0.7;
}

.card-content h3::after {
  content: ' }';
  color: var(--terminal-green);
  opacity: 0.7;
}

.card-content p {
  color: var(--text-secondary);
  line-height: 1.7;
  margin: 0 0 2rem;
  font-size: 1rem;
  opacity: 0.9;
  font-family: 'JetBrains Mono', monospace;
}

.card-stats {
  display: flex;
  gap: 1rem;
  margin: 1.5rem 0;
}

.stat-badge {
  padding: 0.5rem 1rem;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid var(--border-color);
  border-radius: 20px;
  font-size: 0.875rem;
  color: var(--text-muted);
}

.card-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 2rem;
  padding-top: 1.5rem;
  border-top: 1px solid var(--border-color);
}

.footer-text {
  font-weight: 600;
  color: var(--text-primary);
}

.footer-arrow {
  width: 20px;
  height: 20px;
  transition: transform 0.3s ease;
}

.game-card:hover .footer-arrow {
  transform: translateX(5px);
}

/* Character Selection Section */
.character-selection {
  margin: 6rem 0;
  animation: fadeInUp 0.8s ease;
}

.progress-section {
  text-align: center;
  margin-bottom: 4rem;
  padding: 3rem;
  background: linear-gradient(135deg, rgba(0, 255, 65, 0.03) 0%, rgba(0, 212, 255, 0.02) 100%);
  border-radius: 24px;
  backdrop-filter: blur(20px);
  border: 2px solid var(--border-primary);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.05);
  position: relative;
  overflow: hidden;
}

.progress-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: var(--primary-gradient);
  animation: scanLine 3s infinite;
}

.progress-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 1rem;
}

.progress-bar-container {
  width: 100%;
  max-width: 400px;
  height: 12px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 6px;
  margin: 0 auto;
  overflow: hidden;
}

.progress-bar {
  height: 100%;
  background: var(--success-gradient);
  border-radius: 6px;
  transition: width 0.3s ease;
  position: relative;
}

.progress-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: shimmer 2s infinite;
}

.progress-text {
  margin-top: 0.5rem;
  color: var(--text-secondary);
  font-size: 0.875rem;
}

.character-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1.5rem;
  margin-top: 2rem;
}

.character-card {
  padding: 2.5rem;
  background: linear-gradient(135deg, rgba(0, 255, 65, 0.03) 0%, rgba(0, 212, 255, 0.02) 100%);
  border: 2px solid var(--border-primary);
  border-radius: 24px;
  text-align: center;
  cursor: pointer;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  backdrop-filter: blur(20px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.05);
  overflow: hidden;
  min-height: 300px;
  animation: fadeInUp 0.6s ease forwards;
  animation-delay: var(--delay, 0s);
  opacity: 0;
}

.character-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: var(--primary-gradient);
  transition: left 0.5s ease;
}

.character-card.locked {
  opacity: 0.5;
  cursor: not-allowed;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.02) 0%, rgba(0, 0, 0, 0.05) 100%);
  border-color: rgba(255, 255, 255, 0.1);
}

.character-card.selected {
  border-color: var(--matrix-green);
  background: linear-gradient(135deg, rgba(0, 255, 65, 0.08) 0%, rgba(0, 212, 255, 0.05) 100%);
  transform: scale(1.05);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25), var(--glow-primary), inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.character-card.selected::before {
  left: 0;
}

.character-card:not(.locked):hover {
  transform: translateY(-8px) scale(1.03);
  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.2), var(--glow-accent), inset 0 1px 0 rgba(255, 255, 255, 0.08);
  border-color: var(--bright-green);
  background: linear-gradient(135deg, rgba(0, 255, 65, 0.05) 0%, rgba(0, 212, 255, 0.03) 100%);
}

.character-card:not(.locked):hover::before {
  left: 0;
}

.character-avatar {
  width: 100px;
  height: 100px;
  margin: 0 auto 1.5rem;
  position: relative;
}

.character-svg {
  width: 100%;
  height: 100%;
  display: block;
  overflow: visible;
}

.character-svg svg {
  width: 100%;
  height: 100%;
  display: block;
}

.lock-icon {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 50%;
  color: var(--text-muted);
  font-size: 2rem;
}

.character-info h4 {
  font-size: 1.4rem;
  font-weight: 800;
  color: var(--text-primary);
  margin: 0 0 0.75rem;
  font-family: 'JetBrains Mono', monospace;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
}

.character-info h4::before {
  content: '< ';
  color: var(--terminal-green);
  opacity: 0.7;
}

.character-info h4::after {
  content: ' />';
  color: var(--terminal-green);
  opacity: 0.7;
}

.character-info p {
  color: var(--text-secondary);
  font-size: 0.95rem;
  line-height: 1.6;
  margin: 0 0 1.5rem;
  font-family: 'JetBrains Mono', monospace;
  opacity: 0.9;
}

.character-abilities {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: center;
  margin-bottom: 1rem;
}

.ability-tag {
  padding: 0.25rem 0.75rem;
  background: var(--accent-gradient);
  color: white;
  border-radius: 15px;
  font-size: 0.75rem;
  font-weight: 500;
}

.selected-indicator {
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 24px;
  height: 24px;
  background: var(--success-gradient);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 0.875rem;
}

.unlock-requirement {
  color: var(--text-muted);
  font-size: 0.75rem;
  margin-top: 1rem;
  padding: 0.5rem;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 10px;
}

.selected-character-info {
  margin-top: 3rem;
  padding: 2.5rem;
  background: var(--card-bg);
  border: 2px solid var(--border-color);
  border-radius: 20px;
  text-align: center;
  animation: fadeInUp 0.5s ease;
}

.selected-character-avatar {
  width: 120px;
  height: 120px;
  margin: 0 auto 1.5rem;
}

.selected-character-name {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0 0 0.5rem;
}

.selected-character-description {
  color: var(--text-secondary);
  font-size: 1.125rem;
  line-height: 1.6;
  margin: 0 0 2rem;
  max-width: 500px;
  margin-left: auto;
  margin-right: auto;
}

.start-journey-btn {
  padding: 1rem 2.5rem;
  background: var(--primary-gradient);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1.125rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.start-journey-btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-light);
}

/* Character Feedback Popup */
.character-feedback-popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--card-bg);
  border: 2px solid var(--border-color);
  border-radius: 20px;
  padding: 2rem;
  max-width: 400px;
  width: 90%;
  z-index: 1000;
  animation: popupAppear 0.3s ease;
}

.character-feedback-popup.success {
  border-color: rgba(56, 239, 125, 0.5);
}

.character-feedback-popup.hint {
  border-color: rgba(251, 191, 36, 0.5);
}

.feedback-character {
  text-align: center;
  margin-bottom: 1.5rem;
}

.feedback-avatar {
  width: 80px;
  height: 80px;
  margin: 0 auto;
}

.feedback-content {
  text-align: center;
}

.feedback-message {
  font-size: 1.125rem;
  color: var(--text-primary);
  margin-bottom: 0.5rem;
  line-height: 1.5;
}

.feedback-character-name {
  color: var(--text-secondary);
  font-style: italic;
  font-size: 0.875rem;
}

.feedback-close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  color: var(--text-muted);
  font-size: 1.5rem;
  cursor: pointer;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: all 0.2s ease;
}

.feedback-close:hover {
  background: rgba(255, 255, 255, 0.1);
  color: var(--text-primary);
}

/* SVG Character Animations */
.character-svg.animated .bounce {
  animation: bounce 2s ease-in-out infinite;
}

.character-svg.animated .blink {
  animation: blink 3s ease-in-out infinite;
}

.character-svg.animated .wave {
  animation: wave 1.5s ease-in-out infinite;
  transform-origin: center bottom;
}

.character-svg.animated .float {
  animation: float 3s ease-in-out infinite;
}

.character-svg.animated .flap {
  animation: flap 1s ease-in-out infinite;
  transform-origin: center;
}

.character-svg.animated .pulse {
  animation: pulse 2s ease-in-out infinite;
}

.character-svg.animated .wiggle {
  animation: wiggle 2s ease-in-out infinite;
}

.character-svg.animated .wag {
  animation: wag 0.8s ease-in-out infinite;
  transform-origin: left center;
}

.character-svg.animated .quantum-pulse {
  animation: quantumPulse 2s ease-in-out infinite;
}

.character-svg.animated .quantum-rotate {
  animation: quantumRotate 4s linear infinite;
  transform-origin: center;
}

.character-svg.animated .quantum-rotate-reverse {
  animation: quantumRotate 4s linear infinite reverse;
  transform-origin: center;
}

.character-svg.animated .quantum-glow {
  animation: quantumGlow 1.5s ease-in-out infinite alternate;
}

/* Keyframe Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(100px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes gradientShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
  40% { transform: translateY(-10px); }
  60% { transform: translateY(-5px); }
}

@keyframes blink {
  0%, 90%, 100% { transform: scaleY(1); }
  95% { transform: scaleY(0.1); }
}

@keyframes wave {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(15deg); }
  75% { transform: rotate(-15deg); }
}

@keyframes flap {
  0%, 100% { transform: rotateZ(0deg); }
  50% { transform: rotateZ(-10deg); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

@keyframes wiggle {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(1deg); }
  75% { transform: rotate(-1deg); }
}

@keyframes wag {
  0%, 100% { transform: rotate(0deg); }
  50% { transform: rotate(15deg); }
}

@keyframes quantumPulse {
  0%, 100% { opacity: 0.8; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.1); }
}

@keyframes quantumRotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes quantumGlow {
  from { opacity: 0.5; }
  to { opacity: 1; }
}

@keyframes popupAppear {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Responsive Design */

/* Extra Large Screens (1440px+) */
@media (min-width: 1440px) {
  .landing-container {
    max-width: 1600px;
    padding: 3rem;
  }
  
  .game-cards-grid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .character-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* Large Screens (1200px - 1439px) */
@media (max-width: 1439px) and (min-width: 1200px) {
  .landing-container {
    max-width: 1200px;
  }
  
  .game-cards-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Medium Screens (992px - 1199px) */
@media (max-width: 1199px) and (min-width: 992px) {
  .landing-container {
    max-width: 960px;
    padding: 2rem 1.5rem;
  }
  
  .hero-stats {
    gap: 2rem;
  }
  
  .stat-number {
    font-size: 2rem;
  }
}

/* Small Screens (768px - 991px) */
@media (max-width: 991px) and (min-width: 768px) {
  .landing-container {
    padding: 1.5rem;
  }
  
  .hero-section {
    padding: 3rem 0 4rem;
  }
  
  .hero-stats {
    gap: 1.5rem;
  }
  
  .stat-number {
    font-size: 1.75rem;
  }
  
  .hero-features {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .game-cards-grid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
  
  .character-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Mobile Screens (480px - 767px) */
@media (max-width: 767px) {
  .landing-container {
    padding: 1rem;
  }
  
  .hero-section {
    padding: 2rem 0 3rem;
  }
  
  .hero-stats {
    flex-direction: column;
    gap: 1rem;
  }
  
  .stat-number {
    font-size: 1.5rem;
  }
  
  .hero-features {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .feature-item {
    padding: 1.5rem;
  }
  
  .hero-cta {
    flex-direction: column;
    align-items: center;
  }
  
  .cta-primary, .cta-secondary {
    width: 100%;
    max-width: 280px;
    justify-content: center;
  }
  
  .game-cards-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .game-card {
    padding: 1.5rem;
  }
  
  .card-icon {
    width: 60px;
    height: 60px;
  }
  
  .character-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .character-card {
    padding: 1.5rem;
  }
  
  .character-avatar {
    width: 80px;
    height: 80px;
  }
  
  .selected-character-info {
    padding: 1.5rem;
  }
  
  .selected-character-avatar {
    width: 100px;
    height: 100px;
  }
}

/* Small Mobile Screens (360px - 479px) */
@media (max-width: 479px) {
  .landing-container {
    padding: 0.75rem;
  }
  
  .hero-badge {
    padding: 0.375rem 1rem;
    font-size: 0.75rem;
  }
  
  .section-title {
    font-size: 2rem;
  }
  
  .section-subtitle {
    font-size: 1rem;
  }
  
  .game-card {
    padding: 1rem;
  }
  
  .card-icon {
    width: 50px;
    height: 50px;
    font-size: 1.5rem;
  }
  
  .character-card {
    padding: 1rem;
  }
  
  .character-avatar {
    width: 60px;
    height: 60px;
  }
  
  .character-feedback-popup {
    padding: 1.5rem;
    width: 95%;
  }
  
  .feedback-avatar {
    width: 60px;
    height: 60px;
  }
}

/* Extra Small Mobile Screens (max 359px) */
@media (max-width: 359px) {
  .hero-title {
    font-size: 2.5rem;
  }
  
  .hero-subtitle {
    font-size: 1rem;
  }
  
  .feature-item {
    padding: 1rem;
  }
  
  .feature-icon {
    width: 40px;
    height: 40px;
  }
  
  .feature-icon svg {
    width: 20px;
    height: 20px;
  }
  
  .game-card {
    padding: 0.75rem;
  }
  
  .character-card {
    padding: 0.75rem;
  }
}

/* Comprehensive override system to eliminate ALL purple colors */
.landing-container *,
.landing-container *::before,
.landing-container *::after {
  /* Override any purple background colors */
  background-color: inherit !important;
}

/* Specific overrides for common purple CSS classes */
.landing-container .purple,
.landing-container .violet,
.landing-container .primary-500,
.landing-container .accent-pink,
.landing-container [style*="purple"],
.landing-container [style*="violet"],
.landing-container [style*="#8b5cf6"],
.landing-container [style*="#a855f7"],
.landing-container [style*="#9333ea"],
.landing-container [style*="#7c3aed"],
.landing-container [style*="#6d28d9"] {
  background: var(--primary-gradient) !important;
  background-color: var(--matrix-green) !important;
  color: var(--text-primary) !important;
  border-color: var(--matrix-green) !important;
}

/* Button overrides within landing container */
.landing-container button,
.landing-container .btn,
.landing-container .button,
.landing-container input[type="button"],
.landing-container input[type="submit"] {
  background: var(--primary-gradient) !important;
  background-color: var(--matrix-green) !important;
  color: var(--dark-bg) !important;
  border: 2px solid var(--matrix-green) !important;
  box-shadow: var(--glow-primary) !important;
  transition: all 0.3s ease !important;
}

.landing-container button:hover,
.landing-container .btn:hover,
.landing-container .button:hover,
.landing-container input[type="button"]:hover,
.landing-container input[type="submit"]:hover {
  background: var(--secondary-gradient) !important;
  background-color: var(--cyber-blue) !important;
  border-color: var(--cyber-blue) !important;
  box-shadow: var(--glow-secondary) !important;
  transform: translateY(-2px) !important;
}

/* Enhanced Responsive Design - Mobile First Approach */
@media (max-width: 480px) {
  .landing-container {
    padding: 0.75rem !important;
    width: 100% !important;
    overflow-x: hidden !important;
  }
  
  .hero-section {
    padding: 2rem 1rem 3rem !important;
    margin: 0.5rem auto !important;
    max-width: 95vw !important;
    border-radius: 12px !important;
  }
  
  .hero-badge {
    font-size: 0.7rem !important;
    padding: 0.4rem 0.8rem !important;
    margin-bottom: 1rem !important;
  }
  
  .hero-title {
    font-size: 1.8rem !important;
    line-height: 1.3 !important;
    letter-spacing: 0.5px !important;
    margin-bottom: 1rem !important;
  }
  
  .hero-subtitle {
    font-size: 0.9rem !important;
    margin: 1rem auto 2rem !important;
    max-width: 85vw !important;
    line-height: 1.5 !important;
  }
  
  .hero-stats {
    gap: 1rem !important;
    margin: 1.5rem 0 !important;
  }
  
  .stat-number {
    font-size: 1.8rem !important;
  }
  
  .stat-label {
    font-size: 0.7rem !important;
  }
}

@media (min-width: 481px) and (max-width: 768px) {
  .landing-container {
    padding: 1rem !important;
    overflow-x: hidden !important;
  }
  
  .hero-section {
    padding: 3rem 1.5rem 4rem !important;
    margin: 1rem auto !important;
    max-width: 90vw !important;
  }
  
  .hero-title {
    font-size: 2.2rem !important;
    line-height: 1.25 !important;
  }
  
  .hero-subtitle {
    font-size: 1rem !important;
    max-width: 80vw !important;
  }
  
  .hero-features {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)) !important;
    gap: 1.5rem !important;
  }
  
  .hero-cta .btn {
    padding: 1rem 2rem !important;
    font-size: 0.9rem !important;
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  .landing-container {
    padding: 2rem !important;
    max-width: 900px !important;
  }
  
  .hero-section {
    padding: 5rem 0 6rem !important;
  }
}

@media (min-width: 1025px) {
  .landing-container {
    max-width: 1400px !important;
    padding: 2rem !important;
  }
  
  .hero-section {
    padding: 6rem 0 8rem !important;
  }
}